@page "/contact"
@using BlazorSSRSendEmail.Models
@using MailKit.Net.Smtp
@using MimeKit

<PageTitle>Contact</PageTitle> 
    <!-- Header -->
    <section class="container-fluid header" >
        <h4>CONTACT</h4>
    </section>

    <!-- Content -->
    <section class="container-md custom-pad content">
        <div class="row row-cols-1 flex-wrap-reverse">
            <div class="col-lg-5 d-flex flex-column gap-4 space-between" >
                <span>
                    <h4 style="color: #102389;">Our office</h4>
                    <p>Whether you are interested in one of LogiKCo’s custom solutions or need technical assistance, we’re here to help in any way we can.</p>
                </span>
                <div class="d-flex location justify-content-between">
                    <span style="flex: 1;">
                        <h6>USA</h6>
                        <p>330 Roberts Street, Suite 400East Hartford, CT 06108<br/>860.289.0728<br/>info@logikco.com</p>
                    </span>
                    <iframe style="flex: 1; width: 100%; height: 100%;" src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2975.772013753067!2d-72.62079289472318!3d41.76857303983419!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x89e6541a7d279a71%3A0x378063a058f22979!2sLogikco%2C%20Inc.!5e0!3m2!1sen!2stw!4v1726211007234!5m2!1sen!2stw" width="600" height="450" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>
                </div>
                <div class="d-flex location justify-content-between" >
                    <span style="flex: 1;">
                        <h6>Taiwan</h6>
                        <p>330 Roberts Street, Suite 400East Hartford, CT 06108<br/>860.289.0728<br/>info@logikco.com</p>
                    </span>
                    <iframe style="flex: 1; width: 100%; height: 100%;" src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2975.772013753067!2d-72.62079289472318!3d41.76857303983419!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x89e6541a7d279a71%3A0x378063a058f22979!2sLogikco%2C%20Inc.!5e0!3m2!1sen!2stw!4v1726211007234!5m2!1sen!2stw" width="600" height="450" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>
                </div>      
            </div> 
            <div class="col-lg-1">
            </div>
            <div class="col-lg-6 mb-4">
                <EditForm Model="EmailRequest" FormName="EmailForm" OnValidSubmit="SendEmail" class="d-flex flex-column gap-3">
                <DataAnnotationsValidator />

                <div class="d-flex flex-row gap-3">
                    <span class="w-100">
                        <label for="firstName" class="form-label">First Name</label>
                        <InputText @bind-Value="EmailRequest.FirstName" class="form-control"/>
                        <ValidationMessage For="@(() => EmailRequest.FirstName)" class="text-danger" />
                    </span>
                    <span class="w-100">
                        <label for="firstName" class="form-label">Last Name</label>
                        <InputText @bind-Value="EmailRequest.LastName" class="form-control"/>
                        <ValidationMessage For="@(() => EmailRequest.LastName)" class="text-danger" />
                    </span>
                </div>

                <div>
                    <label for="firstName" class="form-label">Subject</label>    
                    <InputText @bind-Value="EmailRequest.Subject" class="form-control "  />
                    <ValidationMessage For="@(() => EmailRequest.Subject)" class="text-danger" />
                </div>
                <div>
                    <label for="company" class="form-label">Company</label>
                    <InputText @bind-Value="EmailRequest.Company" class="form-control"/>
                    <ValidationMessage For="@(() => EmailRequest.Company)" class="text-danger" />
                </div>

                <div>
                    <label for="firstName" class="form-label">Your email address</label>
                    <InputText @bind-Value="EmailRequest.EmailAddress" class="form-control"/>
                    <ValidationMessage For="@(() => EmailRequest.EmailAddress)" class="text-danger" />
                </div>

                <div>
                    <label for="firstName" class="form-label">Message</label>
                    <InputTextArea @bind-Value="EmailRequest.Body" class="form-control "/>
                    <ValidationMessage For="@(() => EmailRequest.Body)" class="text-danger" />
                </div>

                <button type="submit" class="btn btn-primary  w-100">Submit</button>
                </EditForm>         
            </div> 
        </div>       
    </section>

<style scoped>
    label{
        margin-bottom: 0.25rem !important;
    }

    input,
    textarea{
        background-color: #FAFAFA !important;
    }

</style>

@if (messageSent)
{
    <div class="alert alert-success mt-3">Your message has been sent successfully!</div>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger mt-3">@errorMessage</div>
}

@code {
    [SupplyParameterFromForm(FormName = "EmailForm")]
    EmailRequest EmailRequest { get; set; } = new EmailRequest
    {
        FirstName = string.Empty,
        LastName = string.Empty,
        EmailAddress = string.Empty,
        Body = string.Empty,
        Subject = string.Empty,
        Company = string.Empty,
    };

    private bool messageSent = false;
    private string errorMessage = null;
    
    void SendEmail()
    {
        var email = new MimeMessage();
        email.From.Add(MailboxAddress.Parse("tommy.chi@logikco.com")); // Support email
        email.To.Add(MailboxAddress.Parse("tommy.chi@logikco.com")); // Sent to
        email.Subject = EmailRequest.Subject;

        // 合併 FirstName、LastName 和 EmailAddress 進入電子郵件主體
        var bodyContent = $"<p>First Name: {EmailRequest.FirstName}</p>" +
                          $"<p>Last Name: {EmailRequest.LastName}</p>" +
                          $"<p>Email Company: {EmailRequest.Company}</p>" +
                          $"<p>Email Address: {EmailRequest.EmailAddress}</p>" +
                          $"<p>Message:</p><p>{EmailRequest.Body}</p>";

        email.Body = new TextPart(MimeKit.Text.TextFormat.Html)
        {
            Text = bodyContent
        };

        using var smtp = new SmtpClient();
        smtp.Connect("smtp-mail.outlook.com", 587, MailKit.Security.SecureSocketOptions.StartTls);
        smtp.Authenticate("tommy.chi@logikco.com", "Aa0422052345");
        smtp.Send(email);
        smtp.Disconnect(true);

        messageSent = true; // 更新發送狀態
    }
}